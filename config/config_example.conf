Server {
		listen 					8080; 					# If a port is omitted, the 80 port is used.
		listen 					127.0.0.1:8080;  		# https://nginx.org/en/docs/http/ngx_http_core_module.html#listen
		listen 					80 default_server;nning, end, or both; the asterisk matches any sequence of characters.
		server_name 			Hello_Web; 				# check met host headername in request, anders eerste server in configfile The parameter to server_name can be a full (exact) name, a wildcard, or a regular expression. A wildcard is a character string that includes the asterisk (*) at its begi
														# which servername settings -> https://docs.nginx.com/nginx/admin-guide/web-server/web-server/
		error_page 				404 public/404.html;	# error page https://docs.nginx.com/nginx/admin-guide/web-server/web-server/
		error_page 				500 502 503 504 /50x.html;
		error_page 				404 =200 /empty.gif;
		client_max_body_size 	100M; 					# max upload 413 error page size  https://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size
		root 	public;									# root https://nginx.org/en/docs/http/ngx_http_core_module.html#root
		index	index.html;								# index https://nginx.org/en/docs/http/ngx_http_index_module.html#index
		upload_store ./uploads; 
		return 404 http://www.example.com/moved/here # returns responsecode 404, or the text to return in the response body
		
		#locations
		location / {
			location /B { 
				
			}
			index index.html;
			allow_methods GET POST;
			autoindex on; 
			upload_store ./uploads; 
			cgi_pass
			return 404 http://www.example.com/moved/here # returns responsecode 404, or the text to return in the response body
		}

		location public/error {
			index index.html;
			allow_methods GET POST;
			autoindex off; 
			upload_store ./uploads; 
		}


		# location /test/ {
		#     root /var/www/html; 			#Define a directory or a file from where the file should be searched. default root html
		#     index test.html; 				#Set a default file to answer if the request is a directory
		#     allow_methods GET POST; 		#Define a list of accepted HTTP methods for the route
		#     autoindex on; 					#Turn on or off directory listing.
		#     upload_store ./uploads; 		#Make the route able to accept uploaded files and configure where they should be saved.
		#	location *.php {
		#    cgi_pass test_mac/macos_cgi_tester; #Execute CGI based on certain file extension (for example .php).
		#}
		
		#}
}

location
	HTTP methods - get post delete 
	return 301 /new-name/unique-page-name # redirects!?
	alias
	error_page
	index
	root
	autoindex on
	cgi_path
	cgi_extension
	upload_store

	
	; servername + open serverblock {
	; ~~~~
	; }
	; location xxx
	; open location block {
	; ~~~~	
	; close }
	; location xxx
	; open {
	; 	dingen
	; }
	